name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm ci
        touch .env
        echo "${{secrets.ENV_DATA}}" >> .env
      
    - name: Build
      run: npm run build

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: build-artifact
        path: |
          dist
          package.json
          package-lock.json
        retention-days: 7
  deploy:
    runs-on: self-hosted
    needs: build
    environment:
      name: production
      url: ${{ steps.deploy-to-production.outputs.url }}
    steps : 
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with: 
          name: build-artifact
          path: dist

      - name: Deploy with PM2
        run: |
          echo "Starting deployment..."
          cd /home/${{secrets.EC2_USERNAME}}/actions-runner/_work/callsureai-backend/callsureai-backend/
          
          # Gracefully stop the existing process
          pm2 stop docker-app || true
          
          # Stop and remove existing containers
          docker compose --profile prod down
          
          # Remove old containers and images
          docker system prune -af
          
          # Start the new container with PM2
          pm2 restart docker-app || pm2 start ./start-docker.sh --name "docker-app"
          
          # Wait for container to be healthy
          sleep 10
          
          # Verify deployment
          if docker ps | grep -q "callsureai-backend-app"; then
            echo "✅ Deployment successful"
            pm2 save
          else
            echo "❌ Deployment failed"
            pm2 logs docker-app --lines 50
            exit 1
          fi